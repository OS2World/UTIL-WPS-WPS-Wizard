
/*
 * This file was generated by the SOM Compiler.
 * FileName: cwlaobject.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emith: 2.42
 */

/*
 *   Module Header
 * 
 *   Module Name: WPOBJECT
 * 
 */


#ifndef SOM_CWLAObject_h
#define SOM_CWLAObject_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef CWLAObject
#define CWLAObject SOMObject
#endif
#include <somobj.h>

/*
 * Start of user-defined types:
 */
#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef CWLaunchArea
    #define CWLaunchArea SOMObject
#endif /* CWLaunchArea */
#ifndef CWLAObject
    #define CWLAObject SOMObject
#endif /* CWLAObject */
#ifndef M_WPObject
    #define M_WPObject SOMObject
#endif /* M_WPObject */
#ifndef WPObject
    #define WPObject SOMObject
#endif /* WPObject */
#ifndef WPFolder
    #define WPFolder SOMObject
#endif /* WPFolder */

/*
 * End of user-defined types.
 */

#define CWLAObject_MajorVersion 1
#define CWLAObject_MinorVersion 2

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define CWLAObjectNewClass cwlaobjectc
#pragma linkage(cwlaobjectc, system)
#define CWLAObjectClassData cwlaobjectd
#define CWLAObjectCClassData cwlaobjectx
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define CWLAObject_classObj CWLAObjectClassData.classObject
#define _CWLAObject CWLAObject_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK CWLAObjectNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(CWLAObjectNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct CWLAObjectClassDataStructure {
	SOMClass *classObject;
	somMToken cwQueryNextObject;
	somMToken cwSetNextObject;
	somMToken cwQueryObjectIcon;
	somMToken cwSetWPObject;
	somMToken cwQueryWPObject;
	somMToken cwSetObjectHandle;
	somMToken cwQueryObjectHandle;
	somMToken cwSetParent;
	somMToken cwQueryParent;
} SOMDLINK CWLAObjectClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct CWLAObjectCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK CWLAObjectCClassData;

/*
 * New and Renew macros for CWLAObject
 */
#define CWLAObjectNew() \
   (_somNew(_CWLAObject ? _CWLAObject : CWLAObjectNewClass(CWLAObject_MajorVersion, CWLAObject_MinorVersion)))
#define CWLAObjectRenew(buf) \
   (_somRenew(_CWLAObject ? _CWLAObject : CWLAObjectNewClass(CWLAObject_MajorVersion, CWLAObject_MinorVersion), buf))

/*
 * Override method: somInit
 */
#define CWLAObject_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * Override method: somUninit
 */
#define CWLAObject_somUninit(somSelf) \
	SOMObject_somUninit(somSelf)

/*
 * New Method: cwQueryNextObject
 */
typedef CWLAObject*   SOMLINK somTP_CWLAObject_cwQueryNextObject(CWLAObject *somSelf);
#pragma linkage(somTP_CWLAObject_cwQueryNextObject, system)
typedef somTP_CWLAObject_cwQueryNextObject *somTD_CWLAObject_cwQueryNextObject;
#define somMD_CWLAObject_cwQueryNextObject "::CWLAObject::cwQueryNextObject"
#define CWLAObject_cwQueryNextObject(somSelf) \
    (SOM_Resolve(somSelf, CWLAObject, cwQueryNextObject) \
	(somSelf))
#ifndef SOMGD_cwQueryNextObject
    #if (defined(_cwQueryNextObject) || defined(__cwQueryNextObject))
        #undef _cwQueryNextObject
        #undef __cwQueryNextObject
        #define SOMGD_cwQueryNextObject 1
    #else
        #define _cwQueryNextObject CWLAObject_cwQueryNextObject
    #endif /* _cwQueryNextObject */
#endif /* SOMGD_cwQueryNextObject */

/*
 * New Method: cwSetNextObject
 */
typedef CWLAObject*   SOMLINK somTP_CWLAObject_cwSetNextObject(CWLAObject *somSelf,
		CWLAObject* cwlaObject);
#pragma linkage(somTP_CWLAObject_cwSetNextObject, system)
typedef somTP_CWLAObject_cwSetNextObject *somTD_CWLAObject_cwSetNextObject;
#define somMD_CWLAObject_cwSetNextObject "::CWLAObject::cwSetNextObject"
#define CWLAObject_cwSetNextObject(somSelf,cwlaObject) \
    (SOM_Resolve(somSelf, CWLAObject, cwSetNextObject) \
	(somSelf,cwlaObject))
#ifndef SOMGD_cwSetNextObject
    #if (defined(_cwSetNextObject) || defined(__cwSetNextObject))
        #undef _cwSetNextObject
        #undef __cwSetNextObject
        #define SOMGD_cwSetNextObject 1
    #else
        #define _cwSetNextObject CWLAObject_cwSetNextObject
    #endif /* _cwSetNextObject */
#endif /* SOMGD_cwSetNextObject */

/*
 * New Method: cwQueryObjectIcon
 */
typedef HPOINTER   SOMLINK somTP_CWLAObject_cwQueryObjectIcon(CWLAObject *somSelf);
#pragma linkage(somTP_CWLAObject_cwQueryObjectIcon, system)
typedef somTP_CWLAObject_cwQueryObjectIcon *somTD_CWLAObject_cwQueryObjectIcon;
#define somMD_CWLAObject_cwQueryObjectIcon "::CWLAObject::cwQueryObjectIcon"
#define CWLAObject_cwQueryObjectIcon(somSelf) \
    (SOM_Resolve(somSelf, CWLAObject, cwQueryObjectIcon) \
	(somSelf))
#ifndef SOMGD_cwQueryObjectIcon
    #if (defined(_cwQueryObjectIcon) || defined(__cwQueryObjectIcon))
        #undef _cwQueryObjectIcon
        #undef __cwQueryObjectIcon
        #define SOMGD_cwQueryObjectIcon 1
    #else
        #define _cwQueryObjectIcon CWLAObject_cwQueryObjectIcon
    #endif /* _cwQueryObjectIcon */
#endif /* SOMGD_cwQueryObjectIcon */

/*
 * New Method: cwSetWPObject
 */
typedef BOOL   SOMLINK somTP_CWLAObject_cwSetWPObject(CWLAObject *somSelf,
		WPObject* wpObject);
#pragma linkage(somTP_CWLAObject_cwSetWPObject, system)
typedef somTP_CWLAObject_cwSetWPObject *somTD_CWLAObject_cwSetWPObject;
#define somMD_CWLAObject_cwSetWPObject "::CWLAObject::cwSetWPObject"
#define CWLAObject_cwSetWPObject(somSelf,wpObject) \
    (SOM_Resolve(somSelf, CWLAObject, cwSetWPObject) \
	(somSelf,wpObject))
#ifndef SOMGD_cwSetWPObject
    #if (defined(_cwSetWPObject) || defined(__cwSetWPObject))
        #undef _cwSetWPObject
        #undef __cwSetWPObject
        #define SOMGD_cwSetWPObject 1
    #else
        #define _cwSetWPObject CWLAObject_cwSetWPObject
    #endif /* _cwSetWPObject */
#endif /* SOMGD_cwSetWPObject */

/*
 * New Method: cwQueryWPObject
 */
typedef WPObject*   SOMLINK somTP_CWLAObject_cwQueryWPObject(CWLAObject *somSelf);
#pragma linkage(somTP_CWLAObject_cwQueryWPObject, system)
typedef somTP_CWLAObject_cwQueryWPObject *somTD_CWLAObject_cwQueryWPObject;
#define somMD_CWLAObject_cwQueryWPObject "::CWLAObject::cwQueryWPObject"
#define CWLAObject_cwQueryWPObject(somSelf) \
    (SOM_Resolve(somSelf, CWLAObject, cwQueryWPObject) \
	(somSelf))
#ifndef SOMGD_cwQueryWPObject
    #if (defined(_cwQueryWPObject) || defined(__cwQueryWPObject))
        #undef _cwQueryWPObject
        #undef __cwQueryWPObject
        #define SOMGD_cwQueryWPObject 1
    #else
        #define _cwQueryWPObject CWLAObject_cwQueryWPObject
    #endif /* _cwQueryWPObject */
#endif /* SOMGD_cwQueryWPObject */

/*
 * New Method: cwSetObjectHandle
 */
typedef BOOL   SOMLINK somTP_CWLAObject_cwSetObjectHandle(CWLAObject *somSelf,
		HOBJECT hObject);
#pragma linkage(somTP_CWLAObject_cwSetObjectHandle, system)
typedef somTP_CWLAObject_cwSetObjectHandle *somTD_CWLAObject_cwSetObjectHandle;
#define somMD_CWLAObject_cwSetObjectHandle "::CWLAObject::cwSetObjectHandle"
#define CWLAObject_cwSetObjectHandle(somSelf,hObject) \
    (SOM_Resolve(somSelf, CWLAObject, cwSetObjectHandle) \
	(somSelf,hObject))
#ifndef SOMGD_cwSetObjectHandle
    #if (defined(_cwSetObjectHandle) || defined(__cwSetObjectHandle))
        #undef _cwSetObjectHandle
        #undef __cwSetObjectHandle
        #define SOMGD_cwSetObjectHandle 1
    #else
        #define _cwSetObjectHandle CWLAObject_cwSetObjectHandle
    #endif /* _cwSetObjectHandle */
#endif /* SOMGD_cwSetObjectHandle */

/*
 * New Method: cwQueryObjectHandle
 */
typedef HOBJECT   SOMLINK somTP_CWLAObject_cwQueryObjectHandle(CWLAObject *somSelf);
#pragma linkage(somTP_CWLAObject_cwQueryObjectHandle, system)
typedef somTP_CWLAObject_cwQueryObjectHandle *somTD_CWLAObject_cwQueryObjectHandle;
#define somMD_CWLAObject_cwQueryObjectHandle "::CWLAObject::cwQueryObjectHandle"
#define CWLAObject_cwQueryObjectHandle(somSelf) \
    (SOM_Resolve(somSelf, CWLAObject, cwQueryObjectHandle) \
	(somSelf))
#ifndef SOMGD_cwQueryObjectHandle
    #if (defined(_cwQueryObjectHandle) || defined(__cwQueryObjectHandle))
        #undef _cwQueryObjectHandle
        #undef __cwQueryObjectHandle
        #define SOMGD_cwQueryObjectHandle 1
    #else
        #define _cwQueryObjectHandle CWLAObject_cwQueryObjectHandle
    #endif /* _cwQueryObjectHandle */
#endif /* SOMGD_cwQueryObjectHandle */

/*
 * New Method: cwSetParent
 */
typedef BOOL   SOMLINK somTP_CWLAObject_cwSetParent(CWLAObject *somSelf,
		CWLaunchArea* cwLA);
#pragma linkage(somTP_CWLAObject_cwSetParent, system)
typedef somTP_CWLAObject_cwSetParent *somTD_CWLAObject_cwSetParent;
#define somMD_CWLAObject_cwSetParent "::CWLAObject::cwSetParent"
#define CWLAObject_cwSetParent(somSelf,cwLA) \
    (SOM_Resolve(somSelf, CWLAObject, cwSetParent) \
	(somSelf,cwLA))
#ifndef SOMGD_cwSetParent
    #if (defined(_cwSetParent) || defined(__cwSetParent))
        #undef _cwSetParent
        #undef __cwSetParent
        #define SOMGD_cwSetParent 1
    #else
        #define _cwSetParent CWLAObject_cwSetParent
    #endif /* _cwSetParent */
#endif /* SOMGD_cwSetParent */

/*
 * New Method: cwQueryParent
 */
typedef CWLaunchArea*   SOMLINK somTP_CWLAObject_cwQueryParent(CWLAObject *somSelf);
#pragma linkage(somTP_CWLAObject_cwQueryParent, system)
typedef somTP_CWLAObject_cwQueryParent *somTD_CWLAObject_cwQueryParent;
#define somMD_CWLAObject_cwQueryParent "::CWLAObject::cwQueryParent"
#define CWLAObject_cwQueryParent(somSelf) \
    (SOM_Resolve(somSelf, CWLAObject, cwQueryParent) \
	(somSelf))
#ifndef SOMGD_cwQueryParent
    #if (defined(_cwQueryParent) || defined(__cwQueryParent))
        #undef _cwQueryParent
        #undef __cwQueryParent
        #define SOMGD_cwQueryParent 1
    #else
        #define _cwQueryParent CWLAObject_cwQueryParent
    #endif /* _cwQueryParent */
#endif /* SOMGD_cwQueryParent */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define CWLAObject_somDefaultInit SOMObject_somDefaultInit
#define CWLAObject_somDestruct SOMObject_somDestruct
#define CWLAObject_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define CWLAObject_somDefaultAssign SOMObject_somDefaultAssign
#define CWLAObject_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define CWLAObject_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define CWLAObject_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define CWLAObject_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define CWLAObject_somDefaultVAssign SOMObject_somDefaultVAssign
#define CWLAObject_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define CWLAObject_somFree SOMObject_somFree
#define CWLAObject_somGetClass SOMObject_somGetClass
#define CWLAObject_somGetClassName SOMObject_somGetClassName
#define CWLAObject_somGetSize SOMObject_somGetSize
#define CWLAObject_somIsA SOMObject_somIsA
#define CWLAObject_somIsInstanceOf SOMObject_somIsInstanceOf
#define CWLAObject_somRespondsTo SOMObject_somRespondsTo
#define CWLAObject_somDispatch SOMObject_somDispatch
#define CWLAObject_somClassDispatch SOMObject_somClassDispatch
#define CWLAObject_somCastObj SOMObject_somCastObj
#define CWLAObject_somResetObj SOMObject_somResetObj
#define CWLAObject_somDispatchV SOMObject_somDispatchV
#define CWLAObject_somDispatchL SOMObject_somDispatchL
#define CWLAObject_somDispatchA SOMObject_somDispatchA
#define CWLAObject_somDispatchD SOMObject_somDispatchD
#define CWLAObject_somPrintSelf SOMObject_somPrintSelf
#define CWLAObject_somDumpSelf SOMObject_somDumpSelf
#define CWLAObject_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_CWLAObject_h */
