/* rexx -  Default REXX script handling folder callbacks of
           WPS-Wizard */

call RxFuncAdd 'SysLoadFuncs', 'RexxUtil', 'SysLoadFuncs'
call SysLoadFuncs

/* Uncomment if you don't want to have a tool bar */
/* WANTTOOLBAR=NO */

/*theString=ARG(1)||' !! '||ARG(2)||' !! '||ARG(3)||' !! '||ARG(4)
*/

WC_BUTTON=ffff0003
WC_STATIC=ffff0005
WC_ENTRYFIELD=ffff0006
WC_MLE=ffff000A

NUMBUTTONS=9
idEntry=NUMBUTTONS+1

FOLDER_MIN_SIZE_Y=200

NUMERIC DIGITS 15 /* We need this for caculating with hex numbers */

SELECT
WHEN ARG(1)="/TOOLBAREVENT" THEN DO
	/* An event from the folder tool bar */

    /* This callback is called with only 3 parameters!
 
    ARG(1): The callback indentifier. In this case /TOOLBAREVENT
    ARG(2): The object pointer
    ARG(3): A composite argument

    */

	PARSE VALUE ARG(3) WITH cmd id hwnd hwndFrame
	/* cmd: the event. Currently only COMMAND 
	   id:  id of the window (button) which caused the event
           hwnd: window handle of window 'id'
           hwndFrame: frame handle of the folder with this toolbar
	*/
if cmd="COMMAND" THEN DO
	SELECT
/*

	WHEN id=7 THEN DO /*  */
		ret=SysSetObjectData("<WPSWIZ_CONFIG>", "OPEN=DEFAULT")
	END
	WHEN id=8 THEN DO /*  */
		ret=SysSetObjectData("<WPSWIZ_SETTINGS>", "OPEN=DEFAULT")
	END
	WHEN id=9 THEN /* Open system configuration */
		ret=SysSetObjectData("<WP_CONFIG>", "OPEN=DEFAULT")
*/
	WHEN id=NUMBUTTONS+2 THEN DO /* Find button clicked */
		/* get handle of entry field */
		hwndEntry=WPSWizCallWinFunc("winWindowFromID", hwnd , idEntry)
		/* Get text from entry field */
		searchText=WPSWizCallWinFunc("winQueryText", hwndEntry )
		if searchText="" THEN DO
			call rxMessagebox "Insert a word to search for." , "Information" 
			EXIT(0)
		END 
		/* Open the topic */
		ADDRESS CMD 'help 'searchText		
	END
	OTHERWISE
		EXIT(0)
	END
END
        EXIT(0)
END
WHEN ARG(1)="/OPENFOLDER" THEN DO 	/* The folder just opened */

	if WANTTOOLBAR=NO THEN 	EXIT(0)

	/* Get the currently running script */
	PARSE SOURCE . . rxfile
	/* Build the res dir from the script location. The res dir contains icons for the tool bar buttons */
	theDir=FILESPEC("d",rxFile)||FILESPEC("p",rxFile) /* Get base dir (x:\...\base\bin\) */
	theDir=LEFT(theDir, LENGTH(theDir)-1)             /* remove last backslash (x:\...\base\bin) */
	theDir=FILESPEC("d",theDir)||FILESPEC("p",theDir)||"res\" /* Add res dir to base path: (x:\...\base\res\) */

	PARSE VALUE ARG(4) WITH hwndFrame ulView

	/* Size folder so toolbar fits */
	PARSE VALUE WPSWizCallWinFunc("winQueryWindowPos", hwndFrame) WITH x y cx cy rest

	if cy<FOLDER_MIN_SIZE_Y then
		ret=WPSWizCallWinFunc("winSetWindowPos", hwndFrame, 0, x, y-FOLDER_MIN_SIZE_Y+cy, cx, FOLDER_MIN_SIZE_Y, 3)

	/* Call folder method to add tool bar */
	hwndToolbar=WPSWizCallFunc("wizAddToolBar", ARG(2), hwndFrame, 36, rxfile)

	/* Create some buttons */

	winData.0=10
	winData.1=hwndToolbar    /* Parent window */
	winData.2=x2D(ffff0003)  /* WC_BUTTON  */
	winData.3=X2D(80000000)  /* WS_VISIBLE */
	winData.4=10                            /* x      */
	winData.5=3                             /* y      */
	winData.6=30                            /* width  */
	winData.7=30                            /* height */
	winData.8=1                             /* ID   */
/*
	DO a=NUMBUTTONS to NUMBUTTONS-2 by -1
		winData.4=1+(a-1)*31
		winData.8=0+a                   /* ID   */
		SELECT
		WHEN a=7 THEN DO
		        winData.9=theDir"MWFOL.ICO"       /* No icon */
			winData.10="Menu configuration folder"         /* Bubble help text */
			winData.4=55+(a-1)*31
		END
		WHEN a=8 THEN DO
		        winData.9=theDir"MWIZ.ICO"       /* No icon */
			winData.10="WPS-Wizard configuration"         /* Bubble help text */
			winData.4=55+(a-1)*31
		END
		WHEN a=9 THEN DO
		        winData.9=theDir"config.ICO" /* Icon */
			winData.10="Open config folder" /* Bubble help text */
			winData.4=55+(a-1)*31
		END
		OTHERWISE 
			winData.10=""
		END

		rc=WPSWizCallWinFunc("winCreateWindow", "winData." , "")
	END
*/
	/* Create an entry field */
	winData.2=x2D(WC_ENTRYFIELD)
	winData.3=X2D(80000008)  /* WS_VISIBLE+ES_MARGIN */
	winData.4=320
	winData.5=10
	winData.6=90
	winData.7=18
	winData.8=NUMBUTTONS+1
	rc=WPSWizCallWinFunc("winCreateWindow", "winData." , "")

	/* Create the find button */
	winData.2=x2D(ffff0003)  /* Button control */
	winData.3=X2D(80000000)  /* WS_VISIBLE */
	winData.4=420
	winData.5=3
	winData.6=60
	winData.7=30
	winData.8=NUMBUTTONS+2 /* ID */
        winData.9=""       /* No icon */
	winData.10="Search in help libraries"         /* Bubble help text */
	rc=WPSWizCallWinFunc("winCreateWindow", "winData." , "~Find...")

	winData.0=6
	winData.1=hwndToolbar    /* Parent window */
	winData.2=hwndToolbar    /* Owner  */
	winData.3=500                            /* x      */
	winData.4=0                             /* y      */
	winData.5=36                            /* width  */
	winData.6=36                            /* height */
	rc=WPSWizCallFunc("cwCreateLaunchArea",  ARG(2), "winData." , 0, "<WPSWIZ_FLDRLAUNCHPAD>")
	PARSE VAR rc hwndLA object

	if hwndLA<>0 THEN
		rc=WPSWizCallWinFunc("winShowWindow", hwndLA , 1)

	winData.0=6
	winData.1=hwndToolbar    /* Parent window */
	winData.2=hwndToolbar    /* Owner  */
	winData.3=0                            /* x      */
	winData.4=0                             /* y      */
	winData.5=36                            /* width  */
	winData.6=36                            /* height */
	rc=WPSWizCallFunc("cwCreateLaunchArea",  ARG(2), "winData." , 1, "<WPSWIZ_FLDRACTION>")
	PARSE VAR rc hwndLA object

	if hwndLA<>0 THEN
		rc=WPSWizCallWinFunc("winShowWindow", hwndLA , 1)

	EXIT(0)
END
WHEN ARG(1)="/FOLDEROPENED" THEN DO
	/* This is called when the folder is opened and fully populated. That means all objects are awake */
	PARSE VALUE ARG(4) WITH hwndFrame ulView .

	/* Query folder size */
	PARSE VALUE WPSWizCallWinFunc("winQueryWindowPos", hwndFrame) WITH x y cx cy rest
	
	/* Check for XFolder statusbar */
	hwndBar=WPSWizCallWinFunc("winWindowFromID", hwndFrame, 36865)

	if hwndBar\=0 THEN DO
		PARSE VALUE WPSWizCallWinFunc("winQueryWindowPos", hwndBar) WITH . . . cy3 rest
		cy2=cy3+FOLDER_MIN_SIZE_Y
	END
	ELSE
		cy2=FOLDER_MIN_SIZE_Y

	if cy2<cy then EXIT(0)

	/* First opening of folder. Scroll objects down. They moved out of sight 
           because of the toolbar. */
	rc=WPSWizCallWinFunc("winSendMsg", hwndFrame , 49 ,  x2D(7ff9), x2D(30000))	/* WM_VSCROLL / SB_PAGEUP */
	/* Prevent second scrolling */
	WPSWizCallWinFunc("winSetWindowPos", hwndFrame, 0, x, y, cx, cy+1, 1)
	EXIT(0)

END
WHEN ARG(1)="/FILTERPOPUP" THEN DO
	/* Intercept this to remove some items from the popup menu */
	EXIT (ARG(3))
END
WHEN ARG(1)="/MODIFYPOPUP" THEN DO
	/* Insert new items to the popup menu */
	PARSE VALUE ARG(4) WITH hwndMenu rest

        /* Uncomment the following to have an example for menu modification */
/*
	ret=WPSWizCallWinFunc("menuInsertSeparator", hwndMenu, 0, -1)
	ret=WPSWizCallWinFunc("menuInsertItem",  hwndMenu, 0, -1, 22300, "Inserted with ~Rexx")
	ret=WPSWizCallWinFunc("menuCheckItem", hwndMenu, 22300, 1, 1)
*/
	EXIT (ARG(3)) /* Return parent result */
END
WHEN ARG(1)="/MENUITEMSELECTED" THEN DO
	/* This is called when the user selects a menu item */
	PARSE VALUE ARG(4) WITH hwndFrame ulMenuId
	if ulMenuID=22300 THEN
		call beep 1000, 500
	/* Return 1 if you handle this menu item */
	EXIT (0)
END
WHEN ARG(1)="/DRAGOVER" THEN DO
	/*
	/* call lineout "d:\arbeitsoberflaeche\wiz.log", arg(4) */
	PARSE VALUE ARG(4) WITH hwndFrame pdraginfo

	IF WPSWizCallWinFunc("drgQueryNumObjects", pdraginfo)\=1 THEN
		EXIT(X2D(200003))

	IF WPSWizCallWinFunc("drgCheckClass", pdraginfo, "WPFileSystem")\=1 THEN
		EXIT(X2D(200003))

	IF WPSWizCallWinFunc("drgCheckIfFileSysOnly", pdraginfo)\=1 THEN
		EXIT(X2D(00200003))
	*/
	EXIT(0)
	END
OTHERWISE
	return ARG(3)
END

