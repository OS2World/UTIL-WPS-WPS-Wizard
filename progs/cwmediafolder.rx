/* rexx -  Default REXX script handling folder callbacks of
           WPS-Wizard */

call RxFuncAdd 'SysLoadFuncs', 'RexxUtil', 'SysLoadFuncs'
call SysLoadFuncs

/* Uncomment if you don't want to have a tool bar */
/* WANTTOOLBAR=NO */

WC_BUTTON=ffff0003
WC_STATIC=ffff0005
WC_ENTRYFIELD=ffff0006
WC_MLE=ffff000A

NUMBUTTONS=4
idEntry=NUMBUTTONS+1

FOLDER_MIN_SIZE_Y=200

NUMERIC DIGITS 15 /* We need this for caculating with hex numbers */

SELECT
WHEN ARG(1)="/OBJECTHINT" THEN DO
	PARSE SOURCE . . theScript
	thePath=FILESPEC("drive",theScript)||FILESPEC("path", theScript)||"fldrhint.rx"
	theHintCmd='call  "'||thePath||'" 'ARG(2)
	interpret theHintCmd
	if result\="" then EXIT result" "

	theString=WPSWizCallFunc("cwQueryRealName", ARG(2), 1)
	theDir=theString
	theString=theString||":"
	ret=SysFileTree(theDir"\*", "files.", "F")
	if files.0\=0 THEN
		theString=theString||'0a'x||files.0||" Files"
	ret=SysFileTree(theDir"\*.*", "dirs.", "D")
	if dirs.0\=0 THEN
		theString=theString||'0a'x||dirs.0||" Directories"
	EXIT theString" "
END

WHEN ARG(1)="/TOOLBAREVENT" THEN DO
	/* An event from the folder tool bar */

    /* This callback is called with only 3 parameters!
 
    ARG(1): The callback indentifier. In this case /TOOLBAREVENT
    ARG(2): The object pointer
    ARG(3): A composite argument

    */

	PARSE VALUE ARG(3) WITH cmd id hwnd hwndFrame
	/* cmd: the event. Currently only COMMAND 
	   id:  id of the window (button) which caused the event
           hwnd: window handle of window 'id'
           hwndFrame: frame handle of the folder with this toolbar
	*/
if cmd="COMMAND" THEN DO
	SELECT
	WHEN id=1 THEN /* Open parent */
		ret=SysSetObjectData(WPSWizCallFunc("cwQueryRealName", ARG(2), 1), "MENUITEMSELECTED=714")
	WHEN id=2 THEN /* Open properties */
		ret=SysSetObjectData(WPSWizCallFunc("cwQueryRealName", ARG(2), 1), "MENUITEMSELECTED=112")
	WHEN id=3 THEN /* Create M3U playlist */
		call createM3U ARG(2), hwndFrame
	WHEN id=4 THEN /* Create audio CD */
		call createAudioCD ARG(2), hwndFrame


	OTHERWISE
		EXIT(0)
	END
END
        EXIT(0)
END
WHEN ARG(1)="/OPENFOLDER" THEN DO 	/* The folder just opened */

	if WANTTOOLBAR=NO THEN 	EXIT(0)

	/* Get the currently running script */
	PARSE SOURCE . . rxfile
	/* Build the res dir from the script location. The res dir contains icons for the tool bar buttons */
	theDir=FILESPEC("d",rxFile)||FILESPEC("p",rxFile) /* Get base dir (x:\...\base\bin\) */
	theDir=LEFT(theDir, LENGTH(theDir)-1)             /* remove last backslash (x:\...\base\bin) */
	theDir=FILESPEC("d",theDir)||FILESPEC("p",theDir)||"res\" /* Add res dir to base path: (x:\...\base\res\) */

	/* Call folder method to add tool bar */
	PARSE VALUE ARG(4) WITH hwndFrame ulView

	/* Size folder so toolbar fits */
	PARSE VALUE WPSWizCallWinFunc("winQueryWindowPos", hwndFrame) WITH x y cx cy rest

	if cy<FOLDER_MIN_SIZE_Y then
		ret=WPSWizCallWinFunc("winSetWindowPos", hwndFrame, 0, x, y-FOLDER_MIN_SIZE_Y+cy, cx, FOLDER_MIN_SIZE_Y, 3)
	hwndToolbar=WPSWizCallFunc("wizAddToolBar", ARG(2), hwndFrame, 36, rxfile)

	/* Create some buttons */
	winData.0=10
	winData.1=hwndToolbar    /* Parent window */
	winData.2=x2D(ffff0003)  /* WC_BUTTON  */
	winData.3=X2D(80000000)  /* WS_VISIBLE */
	winData.4=10                            /* x      */
	winData.5=3                             /* y      */
	winData.6=30                            /* width  */
	winData.7=30                            /* height */
	winData.8=1                             /* ID   */
	DO a=NUMBUTTONS to 1 by -1
		winData.4=1+(a-1)*31
		winData.8=0+a                   /* ID   */

		SELECT
		WHEN a=1 THEN DO
		        winData.9=theDir"parent.ICO" /* Icon */
			winData.10="Open parent"     /* Bubble help text */
		END
		WHEN a=2 THEN DO
		        winData.9=theDir"properties.ICO" /* Icon */
			winData.10="Open properties" /* Bubble help text */
		END
		WHEN a=3 THEN DO
			winData.4=15+(a-1)*31
		        winData.9=theDir"M3U.ICO" /* Icon */
		    	winData.10="Create M3U playlist from selected files" /* Bubble help text */
		END
		WHEN a=4 THEN DO
			winData.4=15+(a-1)*31
		        winData.9=theDir"audfldr.ICO" /* Icon */
		    	winData.10="Create Audio CD from selected files" /* Bubble help text */
		END
		OTHERWISE 
			winData.10=""
		END

		rc=WPSWizCallWinFunc("winCreateWindow", "winData." , "")
	END

	EXIT(0)
END
WHEN ARG(1)="/FOLDEROPENED" THEN DO
	/* This is called when the folder is opened and fully populated. That means all objects are awake */
	PARSE VALUE ARG(4) WITH hwndFrame ulView .

	/* Query folder size */
	PARSE VALUE WPSWizCallWinFunc("winQueryWindowPos", hwndFrame) WITH x y cx cy rest
	
	/* Check for XFolder statusbar */
	hwndBar=WPSWizCallWinFunc("winWindowFromID", hwndFrame, 36865)

	if hwndBar\=0 THEN DO
		PARSE VALUE WPSWizCallWinFunc("winQueryWindowPos", hwndBar) WITH . . . cy3 rest
		cy2=cy3+FOLDER_MIN_SIZE_Y
	END
	ELSE
		cy2=FOLDER_MIN_SIZE_Y

	if cy2<cy then EXIT(0)

	/* First opening of folder. Scroll objects down. They moved out of sight 
           because of the toolbar. */
	rc=WPSWizCallWinFunc("winSendMsg", hwndFrame , 49 ,  x2D(7ff9), x2D(30000))	/* WM_VSCROLL / SB_PAGEUP */
	/* Prevent second scrolling */
	WPSWizCallWinFunc("winSetWindowPos", hwndFrame, 0, x, y, cx, cy+1, 1)
	EXIT(0)

END
WHEN ARG(1)="/FILTERPOPUP" THEN DO
	/* Intercept this to remove some items from the popup menu */
	EXIT (ARG(3))
END
WHEN ARG(1)="/MODIFYPOPUP" THEN DO
	/* Insert new items to the popup menu */
	PARSE VALUE ARG(4) WITH hwndMenu rest
	ret=WPSWizCallWinFunc("menuInsertSeparator", hwndMenu, 0, -1)
	ret=WPSWizCallWinFunc("menuInsertItem",  hwndMenu, 0, -1, 22300, "Inserted with ~Rexx")
	ret=WPSWizCallWinFunc("menuCheckItem", hwndMenu, 22300, 1, 1)

	EXIT (ARG(3)) /* Return parent result */
END
WHEN ARG(1)="/MENUITEMSELECTED" THEN DO
	/* This is called when the user selects a menu item */
	PARSE VALUE ARG(4) WITH hwndFrame ulMenuId
	if ulMenuID=22300 THEN
		call beep 1000, 500
	/* Return 1 if you handle this menu item */
	EXIT (0)
END
WHEN ARG(1)="/DRAGOVER" THEN DO
	/*
	/* call lineout "d:\arbeitsoberflaeche\wiz.log", arg(4) */
	PARSE VALUE ARG(4) WITH hwndFrame pdraginfo

	IF WPSWizCallWinFunc("drgQueryNumObjects", pdraginfo)\=1 THEN
		EXIT(X2D(200003))

	IF WPSWizCallWinFunc("drgCheckClass", pdraginfo, "WPFileSystem")\=1 THEN
		EXIT(X2D(200003))

	IF WPSWizCallWinFunc("drgCheckIfFileSysOnly", pdraginfo)\=1 THEN
		EXIT(X2D(00200003))
	*/
	EXIT(0)
	END
OTHERWISE
	return ARG(3)
END


/****************************************/

createM3U:

QC_FIRST=0
QC_NEXT=1
QC_LAST=2


/* The media folder running this skript */
mFldr=ARG(1)

/* And the frame handle */
frameHandle=ARG(2)

/*Get the container handle */
container=WPSWizCallWinFunc( "winQueryContainerHWND", frameHandle)

if container=0 THEN DO
    rc=RxMessageBox("Cannot get container handle!", "",'OK', "Information")
     EXIT
END

pRec=WPSWizCallWinFunc( "winQueryContRecEmphasis", container, 16 , 1)

a=0
tracks.0=0
DO WHILE (pRec\=0 & pRec\=-1)
	/* Get object pointer */
	obj=WPSWizCallWinFunc( "winObjectFromPRec", pRec)
	/* Follow shadows to file system object */
	obj=MFldrCallFunc( "cwGetFileSystemObject", mFldr, obj)
	/* Check if it's an audio object */
	IF MFldrCallFunc( "cwIsA", obj, "CWAudio")\=0 THEN DO
	        a=a+1
		tracks.a._obj=obj
	END
	pRec=WPSWizCallWinFunc( "winQueryContRecEmphasis", container, pRec , 1)
	tracks.0=a
END

if tracks.0=0 THEN DO
	rc=RxMessageBox("No audio tracks selected.", "Information",'OK')
	EXIT
END

/* Try to find the desktop folder */

/* Get the persistent object handle */
hObject=WPSWizCallWinFunc( "winQueryObject" ,"<WP_DESKTOP>")

if hObject\=0 THEN DO
	/* Get the class object of the given object pointer */
	classObject=WPSWizCallWPSFunc("somGetClass",mFldr)

	/* Get the object pointer from the handle */
	theObject=WPSWizCallWPSClsFunc("wpclsQueryObject", classObject, hObject)

	/* Query the full path of the object */
	desktop=WPSWizCallFunc("cwQueryRealName", theObject, 1)

	/* The object was locked because of "wpclsQueryObject" */
	rc=WPSWizCallWPSFunc("wpUnlockObject", theObject)
END

if desktop\='' THEN
    desktop=desktop||'\new.m3u'

filedlg:

/* Get a name for the new folder from the user */
theName=WPSWizCallWinFunc( "winFileDlg", 1, "Name for play list", desktop)

/* No name, so quit */
if thename="" THEN exit

/* Check if an error occurred */
if thename="ERROR:" THEN DO
  rc=RxMessageBox("File dialog returned an error!", "Error",'OK', "ERROR")
  EXIT
END

/* Check if file exists */
IF STREAM(theName, 'C', 'query exists')=theName THEN DO

  rc=RxMessageBox("The file already exists. Do you want to add the selected tracks to the contents?", "Create *.M3U playlist",'YESNO', "QUESTION")
IF rc=7 then signal filedlg
END

/* Get the path */
thePath=FILESPEC('drive', thename)||FILESPEC('path', thename)
thePath=LEFT(thePath,LENGTH(thePath)-1)


/* Now put names into the playlist file */
DO a=1 to tracks.0
	objName=MFldrCallFunc( "cwQueryRealName", tracks.a._obj, 1)
call lineout thename, objname
END

call stream thename, 'C', 'close'

/* Open the folder */
rc=SysSetObjectData(theName, "OPEN=DEFAULT")

rc=0

return

/****************************************/
/*                                      */
/* Burn selected tracks as an audio CD. */
/* Audio-CD-Creator must be installed.  */
/*                                      */
/* An audio folder will be created and  */
/* the selected tracks inserted.        */
/*                                      */
/****************************************/
createAudioCD:

QC_FIRST=0
QC_NEXT=1
QC_LAST=2

/* The media folder running this skript */
mFldr=ARG(1)

/* And the frame handle */
frameHandle=ARG(2)


/* Check if Audio-CD-Creator is installed */
list.0=0
found=0
rc=SysQueryClassList(list.)
DO a=1 to list.0
	if TRANSLATE(WORD(list.a,1))='CWAUDIOFOLDER' THEN DO
		found=1
		LEAVE
	END
END

IF found=0 THEN DO
	theString="Audio-CD-Creator is not installed. You need this package for burning."
	theString=theString||'0d'X||'0d'X
	theString=theString||'Get it from http://www.os2world.com/cdwriting'||'0d'X||'  '
	rc=RxMessageBox(theString, "",'OK', "Information")
	EXIT
END

/*Get the container handle */
container=WPSWizCallWinFunc( "winQueryContainerHWND", frameHandle)

if container=0 THEN DO
    rc=RxMessageBox("Cannot get container handle!", "",'OK', "Information")
     EXIT
END

pRec=WPSWizCallWinFunc( "winQueryContRecEmphasis", container, 16 , 1)

a=0
tracks.0=0
DO WHILE (pRec\=0 & pRec\=-1)
	/* Get object pointer */
	obj=WPSWizCallWinFunc( "winObjectFromPRec", pRec)
	/* Follow shadows to file system object */
	obj=MFldrCallFunc( "cwGetFileSystemObject", mFldr, obj)
	/* Check if it's an audio object */
	IF MFldrCallFunc( "cwIsA", obj, "CWAudio")\=0 THEN DO
	        a=a+1
		tracks.a._obj=obj
	END
	pRec=WPSWizCallWinFunc( "winQueryContRecEmphasis", container, pRec , 1)
	tracks.0=a
END

if tracks.0=0 THEN DO
	rc=RxMessageBox("No audio tracks selected.", "Information",'OK')
	EXIT
END

/* Try to find the desktop folder */

/* Get the persistent object handle */
hObject=WPSWizCallWinFunc( "winQueryObject" ,"<WP_DESKTOP>")

if hObject\=0 THEN DO
	/* Get the class object of the given object pointer */
	classObject=WPSWizCallWPSFunc("somGetClass",mFldr)

	/* Get the object pointer from the handle */
	theObject=WPSWizCallWPSClsFunc("wpclsQueryObject", classObject, hObject)

	/* Query the full path of the object */
	desktop=WPSWizCallFunc("cwQueryRealName", theObject, 1)

	/* The object was locked because of "wpclsQueryObject" */
	rc=WPSWizCallWPSFunc("wpUnlockObject", theObject)
END

if desktop\='' THEN
    desktop=desktop||'\audioFolder'

/* Get a name for the new folder */
folderName=WPSWizCallWinFunc( "winFileDlg", 1, "Name for Audio-CD-Creator folder", desktop)

/* No name, so quit */
if foldername="" THEN exit

/* Check if an error occurred */
if foldername="ERROR:" THEN DO
  rc=RxMessageBox("File dialog returned an error!", "Error",'OK', "ERROR")
  EXIT
END

/* Get the path */
thePath=FILESPEC('drive',foldername)||FILESPEC('path',foldername)
thePath=LEFT(thePath,LENGTH(thePath)-1)

/* Create a new audio folder to hold the selected tracks */
setup=''
setup='DETAILSCLASS=CWAudioShadow;SORTCLASS=CWAudioShadow;DETAILSTODISPLAY=0,1,4,12,13,14,15,16,17,18,19,20,21;SORTBYATTR=6,24,25,26,27,28,29,30,31,32,33'
newFldr=SysCreateObject("CWAudioFolder", FILESPEC('name',foldername), thePath, setup , 'update')

if newFldr=0 THEN DO
	/* Folder creation failed */
	rc=RxMessageBox("Cannot create audio-CD folder", "Audio-CD folder creation",'OK')
	EXIT
END


/* Now create shadows of the selected tracks */
DO a=tracks.0 to 1 by -1
	objName=MFldrCallFunc( "cwQueryRealName", tracks.a._obj, 0)
	/* When using a space as the object title the real name is used as the title. By doing it this
           way we may have several shadows to the same track in the folder. */
	rc=SysCreateObject("CWAudioShadow", " ", folderName, "SHADOWID="||MFldrCallFunc( "cwQueryRealName", tracks.a._obj,1),'update')
END
/* Open the folder */
rc=SysSetObjectData(folderName, "OPEN=DEFAULT")
rc=0

return
